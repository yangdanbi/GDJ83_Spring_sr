<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
   <mapper namespace="com.sse.app.products.ProductDAO">
   
   	<update id="commentUpdate"  parameterType="ProductCommentDTO" >
	   	UPDATE COMMENTS 
		SET 
			BOARDCONTENTS = #{boardContents}
		WHERE BOARDNUM = #{boardNum} 
   </update>
   
   	 <select id="commentTotalCount" resultType="java.lang.Long" parameterType="ProductCommentPager">
  	 
  	 	SELECT COUNT(BOARDNUM) FROM COMMENTS
  	 	WHERE ITEM_ID= #{item_id}
  	 
  	 </select>
   
	   <select id="commentList" resultType="ProductCommentDTO"  parameterType="ProductCommentPager">
	   	SELECT *
	    FROM
		   (
		   	SELECT ROWNUM R, C.* 
		   	FROM
		   		(
		   		 SELECT * 
			  	 FROM COMMENTS
			   	 WHERE ITEM_ID = #{item_id}
			  	 ORDER BY BOARDNUM DESC
			  	 )C
			 )
		 WHERE R BETWEEN #{startRow} AND #{lastRow}
	   </select>
  
   <insert id="commentAdd" parameterType="ProductCommentDTO">
   	INSERT INTO COMMENTS VALUES
   	(ITEMS_SEQ.NEXTVAL, #{boardContents}, #{boardWriter},#{item_id},SYSDATE)
   
   </insert>
<!--리스트 가져오기  -->
   <select id="getList" resultType="ProductDTO" parameterType="Pager">
   
	
  	 SELECT * FROM
	(SELECT ROWNUM R,B.* FROM
	(SELECT * FROM ITEMS
	<where>
	ITEM_ID>0
	
	<choose>
		<when test="kind=='k2'">
			AND ITEM_DETAIL LIKE '%'||#{search}||'%'
		</when>
		<otherwise>
			AND ITEM_NAME LIKE '%'||#{search}||'%'
		</otherwise>
	</choose>
	
	</where>
	ORDER BY ITEM_ID DESC) B)
	WHERE R BETWEEN #{startRow} AND #{lastRow}

<!--    <![CDATA[
    ]]> -->
   </select>

	<select id="getTotalCount" resultType="java.lang.Long" parameterType="Pager">
		SELECT COUNT(ITEM_ID) FROM ITEMS
		
	<where>
		ITEM_ID>0
	
	<choose>
		<when test="kind=='k2'">
			AND ITEM_DETAIL LIKE '%'||#{search}||'%'
		</when>
		<otherwise>
			AND ITEM_NAME LIKE '%'||#{search}||'%'
		</otherwise>
	</choose>
	
	</where>
	
	</select>


<!--디테일 가져오기  -->
   	<select id="getDetail" resultMap="productDetail" parameterType="ProductDTO">
   	
   	SELECT I.*,P.*
		FROM ITEMS I
	 	LEFT OUTER JOIN
	 	PRODUCTFILES P
	 	ON I.ITEM_ID = P.ITEM_ID
	WHERE I.ITEM_ID=#{item_id}
   	
   	</select>
   	
   	<resultMap type="ProductDTO" id="productDetail">
   		<id column="ITEM_ID" property="item_id"/>
   		<result column="ITEM_NAME" property="item_name"/>
   		<result column="ITEM_DETAIL" property="item_detail"/>
   		<result column="ITEM_RATE" property="item_rate"/>
   		<collection property="productFileDTO" javaType="java.util.List" ofType="ProductFileDTO">
   			<id column="FILENUM" property="fileNum"/>
   			<result column="FILENAME" property="fileName"/>
   			<result column="ORINAME" property="oriName"/>
   		</collection>
   		
   	</resultMap>
 
 <!--새상품 추가하기  -->  	
   	<insert id="addInfo" parameterType="ProductDTO">
   	
   		INSERT INTO ITEMS VALUES (#{item_id}, #{item_name},#{item_detail},#{item_rate})
   	
   	</insert>
   	
   	<select id="getNum" resultType="java.lang.Integer">
   		SELECT ITEMS_SEQ.NEXTVAL FROM DUAL
   	</select>
   	
   	
   	<insert id="addFile" parameterType="ProductFileDTO">
   		INSERT INTO PRODUCTFILES VALUES (FILES_SEQ.NEXTVAL,#{item_id},#{fileName},#{oriName})
   	</insert>
   	
<!-- 특정상품 하나 삭제하기 -->

	<delete id="deleteInfo" parameterType="ProductDTO">
	
		DELETE ITEMS WHERE ITEM_ID=#{item_id}
	
	</delete>
	
<!-- 특정상품 하나 수정하기  -->

	<update id="updateInfo" parameterType="ProductDTO">
	
	UPDATE ITEMS SET ITEM_NAME=#{item_name}, ITEM_DETAIL =#{item_detail},ITEM_RATE =#{item_rate} WHERE ITEM_ID=#{item_id}
	
	</update>

	<insert id="addWish" parameterType="java.util.Map">
	 INSERT INTO WISHLIST VALUES (#{item_id},#{member_id})
	</insert>
	
	<select id="wishList" parameterType="MemberDTO" resultType="ProductDTO">
	SELECT * FROM ITEMS
	WHERE ITEM_ID IN(
	SELECT ITEM_ID FROM WISHLIST WHERE MEMBER_ID=#{member_id})
	</select>
	
	<delete id="deleteWishList" parameterType="java.util.Map">
	DELETE WISHLIST 
	WHERE MEMBER_ID = 
				#{member_id} 
				AND 
				ITEM_ID IN
				<foreach collection="ids" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			
	</delete>
	<delete id="commentDelete" parameterType="ProductCommentDTO">
	DELETE COMMENTS
	WHERE BOARDNUM = #{boardNum} 
		
	</delete>

   </mapper>
